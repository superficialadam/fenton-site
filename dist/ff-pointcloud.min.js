class PointCloudScene{constructor(){this.scene=new THREE.Scene;this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.renderer=new THREE.WebGLRenderer({canvas:document.getElementById("threejs-canvas"),alpha:true,antialias:true});this.pointCloud=null;this.particles=null;this.particleCount=5e3;this.assetBaseUrl=window.location.hostname==="127.0.0.1"?"../assets/":"https://superficialadam.github.io/fenton-site/assets/";this.textureLoader=new THREE.TextureLoader;this.particleTexture=null;this.colorTexture=null;this.pcdLoader=new THREE.PCDLoader;this.init()}async init(){console.log(this.assetBaseUrl);this.renderer.setSize(window.innerWidth,window.innerHeight);this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));this.camera.position.z=5;this.loadAssets();this.loadPointcloud();window.addEventListener("resize",()=>this.onWindowResize());this.animate()}loadAssets(){this.textureLoader.load(this.assetBaseUrl+"testTexture.png",texture=>{this.colorTexture=texture;console.log("âœ“ Color texture loaded");if(this.pointCloud){this.updatePointCloudMaterial()}},undefined,error=>{console.log("Failed to load color texture:",error);this.createCube()})}loadPointcloud(){this.pcdLoader.load(this.assetBaseUrl+"Zaghetto.pcd",points=>{points.geometry.center();points.geometry.scale(10,10,10);this.scene.add(points)})}updatePointCloudMaterial(){if(this.pointCloud&&this.colorTexture){this.pointCloud.material.map=this.colorTexture;this.pointCloud.material.needsUpdate=true}}createPointCloud(){const geometry=new THREE.BufferGeometry;const positions=new Float32Array(this.particleCount*3);const colors=new Float32Array(this.particleCount*3);for(let i=0;i<this.particleCount;i++){const i3=i*3;const radius=Math.random()*2+1;const theta=Math.random()*Math.PI*2;const phi=Math.acos(Math.random()*2-1);positions[i3]=radius*Math.sin(phi)*Math.cos(theta);positions[i3+1]=radius*Math.sin(phi)*Math.sin(theta);positions[i3+2]=radius*Math.cos(phi);colors[i3]=1;colors[i3+1]=1;colors[i3+2]=1}geometry.setAttribute("position",new THREE.BufferAttribute(positions,3));geometry.setAttribute("color",new THREE.BufferAttribute(colors,3));const materialConfig={size:.02,vertexColors:true,transparent:true,opacity:.8};if(this.colorTexture){materialConfig.map=this.colorTexture;materialConfig.vertexColors=false}else if(this.particleTexture){materialConfig.map=this.particleTexture;materialConfig.blending=THREE.AdditiveBlending}const material=new THREE.PointsMaterial(materialConfig);this.pointCloud=new THREE.Points(geometry,material);this.scene.add(this.pointCloud);this.originalPositions=positions.slice()}morphToShape(shapeType,progress){const positions=this.pointCloud.geometry.attributes.position.array;for(let i=0;i<this.particleCount;i++){const i3=i*3;let targetX,targetY,targetZ;switch(shapeType){case"cube":targetX=(Math.random()-.5)*4;targetY=(Math.random()-.5)*4;targetZ=(Math.random()-.5)*4;break;case"plane":targetX=(Math.random()-.5)*6;targetY=(Math.random()-.5)*6;targetZ=0;break;case"line":targetX=i/this.particleCount*8-4;targetY=Math.sin(targetX)*.5;targetZ=0;break;default:targetX=this.originalPositions[i3];targetY=this.originalPositions[i3+1];targetZ=this.originalPositions[i3+2]}positions[i3]+=(targetX-positions[i3])*progress*.02;positions[i3+1]+=(targetY-positions[i3+1])*progress*.02;positions[i3+2]+=(targetZ-positions[i3+2])*progress*.02}this.pointCloud.geometry.attributes.position.needsUpdate=true}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight;this.camera.updateProjectionMatrix();this.renderer.setSize(window.innerWidth,window.innerHeight)}animate(){requestAnimationFrame(()=>this.animate());if(this.pointCloud){this.pointCloud.rotation.y+=.001}this.renderer.render(this.scene,this.camera)}}let pointCloudScene;document.addEventListener("DOMContentLoaded",()=>{pointCloudScene=new PointCloudScene;gsap.registerPlugin(ScrollTrigger);setupScrollAnimations()});function setupScrollAnimations(){ScrollTrigger.create({trigger:".hero",start:"top bottom",end:"bottom top",onUpdate:self=>{pointCloudScene.morphToShape("sphere",self.progress)}});ScrollTrigger.create({trigger:".section-2",start:"top bottom",end:"bottom top",onUpdate:self=>{pointCloudScene.morphToShape("cube",self.progress)}});ScrollTrigger.create({trigger:".section-3",start:"top bottom",end:"bottom top",onUpdate:self=>{pointCloudScene.morphToShape("plane",self.progress)}});ScrollTrigger.create({trigger:".section-4",start:"top bottom",end:"bottom top",onUpdate:self=>{pointCloudScene.morphToShape("line",self.progress)}});gsap.to(pointCloudScene.pointCloud?.rotation||{},{y:Math.PI*2,scrollTrigger:{trigger:"body",start:"top top",end:"bottom bottom",scrub:1}})}